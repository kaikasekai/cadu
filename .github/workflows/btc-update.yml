name: Daily BTC Update

on:
  schedule:
    - cron: '18 16 * * *'  # каждый день в 23:00 UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Fetch BTC price
        id: get_price
        run: |
          PRICE=$(curl -s "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd" | jq '.bitcoin.usd')
          echo "price=$PRICE" >> $GITHUB_ENV

      - name: Update data.csv
        run: |
          DATE=$(date -u +'%Y-%m-%d')
          python3 - <<EOF
import csv
from statistics import mean

date = "$DATE"
price = float("${{ env.price }}")

with open("data.csv", newline="") as f:
    reader = list(csv.reader(f))
headers = reader[0]
rows = reader[1:]

date_idx = headers.index("date")
actual_idx = headers.index("btc_actual")
ma_idx = headers.index("moving_average")

# Обновить btc_actual, если дата уже есть, иначе — добавить новую строку
updated = False
for row in rows:
    if row[date_idx] == date:
        row[actual_idx] = f"{price:.2f}"
        updated = True
        break

if not updated:
    rows.append([date] + ['']*(len(headers)-2) + [f"{price:.2f}", ''])

# Пересчёт moving_average
for i in range(len(rows)):
    if i >= 29:
        window = []
        for j in range(i-29, i+1):
            val = rows[j][actual_idx]
            if val:
                window.append(float(val))
        if len(window) == 30:
            rows[i][ma_idx] = f"{mean(window):.2f}"

# Запись файла
with open("data.csv", "w", newline="") as f:
    writer = csv.writer(f)
    writer.writerow(headers)
    writer.writerows(rows)
EOF

      - name: Commit and push
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "actions@github.com"
          git add data.csv
          git diff --quiet || git commit -m "chore: daily update BTC $DATE"
          git push
