name: Daily BTC Update

on:
  schedule:
    - cron: '0 23 59 * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch BTC price
        id: price
        run: |
          PRICE=$(curl -s "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd" | jq '.bitcoin.usd')
          echo "::set-output name=price::$PRICE"

      - name: Load data.csv and update
        run: |
          DATE=$(date -u +'%Y-%m-%d')
          PRICE=${{ steps.price.outputs.price }}
          python3 - << 'EOF'
import csv
from datetime import datetime
from statistics import mean

rows = list(csv.reader(open('data.csv')))
headers = rows[0]
rows = rows[1:]

# Append new row if DATE not in file
today = '$DATE'
if today not in [r[0] for r in rows]:
    rows.append([today] + ['']*(len(headers)-2) + [PRICE, ''])

# Compute moving_average for each row
actual_idx = headers.index('btc_actual')
ma_idx = headers.index('moving_average')
out = [headers]
for i, r in enumerate(rows):
    out.append(r)
    if i + 1 >= 30:
        window = [float(x[actual_idx]) for x in rows[i-29:i+1] if x[actual_idx]]
        if len(window) == 30:
            r[ma_idx] = f"{mean(window):.2f}"

with open('data.csv', 'w') as f:
    writer = csv.writer(f)
    writer.writerows(out)
EOF

      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "actions@github.com"
          git add data.csv
          git diff --quiet || git commit -m "chore: daily update BTC ${DATE}"
          git push
